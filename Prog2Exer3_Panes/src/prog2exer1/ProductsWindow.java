/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prog2exer1;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Arrays;
import javax.swing.JOptionPane; 
import javax.swing.table.DefaultTableModel;
import static prog2exer1.tocsv.costs;

/**
 *
 * @author Iya
 */
public class ProductsWindow extends javax.swing.JFrame {
static String [][][] prods3d = new String[10][10][8];
static String [][] prods = new String[10][6];
static int [] count2 = {0,0,0,0,0,0,0,0,0,0};
int id = 0;
static int rownum = 0;
static int rowProd = 0;
static String pidorder = " ";
static String ptypeorder = " ";
static String pdescorder = " ";
static int quanorder;
static int costorder;
static int labor;
static int overhead;
static int desprof;
static int ordersnum;
static int sum;
static int sumorder;
int orderSum = 0;
static tocsv tc = new tocsv();
    /**
     * Creates new form ProductsWindow
     */
    public ProductsWindow() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        newproduct = new javax.swing.JButton();
        pid = new javax.swing.JTextField();
        ptype = new javax.swing.JTextField();
        pdesc = new javax.swing.JTextField();
        supp = new javax.swing.JTextField();
        quan1 = new javax.swing.JTextField();
        tcost = new javax.swing.JTextField();
        dreceived = new javax.swing.JTextField();
        stockin = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ptbl1 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        quan2 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ptbl2 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lcost = new javax.swing.JTextField();
        ohcost = new javax.swing.JTextField();
        profit = new javax.swing.JTextField();
        savecosts = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("PRODUCTS");

        jLabel2.setText("Product ID");

        jLabel3.setText("Product Type");

        jLabel4.setText("Description");

        jLabel5.setText("Supplier");

        jLabel7.setText("Quantity");

        jLabel8.setText("Total Cost");

        jLabel9.setText("Date Received");

        newproduct.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        newproduct.setForeground(new java.awt.Color(204, 0, 0));
        newproduct.setText("Save Product");
        newproduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newproductActionPerformed(evt);
            }
        });

        pid.setEditable(false);
        pid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pidActionPerformed(evt);
            }
        });

        quan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quan1ActionPerformed(evt);
            }
        });

        dreceived.setEditable(false);
        dreceived.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dreceivedActionPerformed(evt);
            }
        });

        stockin.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        stockin.setText("Stock-In");
        stockin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockinActionPerformed(evt);
            }
        });

        ptbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Type", "Description", "Supplier", "Quantiity", "Orders"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ptbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ptbl1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ptbl1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel10.setText("+");

        quan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quan2ActionPerformed(evt);
            }
        });

        ptbl2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Type", "Description", "Supplier", "Quantity", "Cost", "DateRecieved", "Orders"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ptbl2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ptbl2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ptbl2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setText("Labor Cost");

        jLabel11.setText("Overhead Cost");

        jLabel12.setText("Desired Profit");

        lcost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lcostActionPerformed(evt);
            }
        });

        profit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profitActionPerformed(evt);
            }
        });

        savecosts.setText("Save");
        savecosts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savecostsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newproduct)
                            .addComponent(stockin)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tcost, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(quan1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(quan2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pid, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ptype, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pdesc, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(supp, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dreceived, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel6)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(savecosts)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lcost)
                                    .addComponent(ohcost)
                                    .addComponent(profit))
                                .addGap(8, 8, 8)))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(pid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(ptype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(pdesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(supp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(quan1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10)
                                .addComponent(quan2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(tcost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(dreceived, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(newproduct)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(stockin)
                                .addGap(86, 86, 86))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(lcost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(ohcost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(profit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(savecosts))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pidActionPerformed

    private void quan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quan2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quan2ActionPerformed

    private void newproductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newproductActionPerformed
        DefaultTableModel tbl1 = (DefaultTableModel) ptbl1.getModel(); 
        if(ptype.getText().length() != 0 && pdesc.getText().length() != 0 && supp.getText().length() != 0 && quan1.getText().length() != 0 && tcost.getText().length() != 0){
            msgbox("Success", "Product |" + ptype.getText() +"| has been added!");
            int index = 0;
            while(prods[index][0] != null){       //find available index
                index++;
            }
            if(prods[0][0] == null){
                id = 1;
            }else{
                id = Integer.parseInt(prods[index-1][0]) + 1;
            }
            pid.setText(String.valueOf(id));
            String today = gettoday();
            ordersnum = 0;
            String [] creds1 = {String.valueOf(id),ptype.getText(),pdesc.getText(),supp.getText(),quan1.getText(),tcost.getText(),today, String.valueOf(ordersnum)};
            String [] creds2 = {String.valueOf(id),ptype.getText(),pdesc.getText(),supp.getText(),quan1.getText(), String.valueOf(ordersnum)};
            dreceived.setText(today);
            //2d to 3d
            for(int i=0;i<prods3d[0][0].length;i++){
                prods3d[index][count2[index]][i] = creds1[i];
            }
            for(int j=0;j<creds2.length;j++){
                prods[index][j] = creds2[j];
            }
            tc.getprods2d();
            tc.getprods3d();
            tc.count2csv();
            tc.prods2dcsv();
            tc.prods3dcsv();
            tc.showprods2d();
            tc.showprods3d();
            try{                                                    //new prods2d to prods2d
                for(int i=0;i<tc.prodstbl1new.length;i++){
                    for(int j=0;j<tc.prodstbl1[0].length;j++){
                        if(tc.prodstbl1new[i][j].equals("-")){
                            continue;
                        }else{
                            if(prods[i][0] != null){
                                prods[i][j] = tc.prodstbl1new[i][j];
                            }
                        }
                    }
                }
            }catch (Exception e){
            }
            try{
                for(int i=0;i<tc.prodstbl2new.length;i++){
                    for(int j=0;j<tc.prodstbl2new[0].length;j++){
                        for(int k=0;k<tc.prodstbl2new[0][0].length;k++){
                            if(tc.prodstbl2new[i][j][0] != null){
                                prods3d[i][j][k] = tc.prodstbl2new[i][j][k];
                            }
                        }
                    }
                }
            }catch (Exception e){
            }
            count2[index]++;
            tc.getcount2();
            tc.showcount2();
            set2D();
        }else{
            msgbox("Error", "Incomplete credentials!");
        }
    }//GEN-LAST:event_newproductActionPerformed
    //date recieved
    public String gettoday(){
        LocalDate today = LocalDate.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM/dd/uuuu");
        String formattedtoday = today.format(formatter);
        return formattedtoday;
    }
    //show table 1
    public void set2D(){
        DefaultTableModel tbl1 = (DefaultTableModel) ptbl1.getModel();
        tbl1.setRowCount(0);
        for(int i=0;i<prods.length;i++){
            if(prods[i][0] != null){
                tbl1.addRow(prods[i]);
            }
        }
    }
    //show table 2
    public void set3D(){
        DefaultTableModel tbl2 = (DefaultTableModel) ptbl2.getModel();
        tbl2.setRowCount(0);
        for(int i=0;i<prods3d[0].length;i++){
            if(prods3d[rownum][i][0] != null){
                tbl2.addRow(prods3d[rownum][i]);
            }
        }
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        pid.setEditable(false);
        pid.setText(String.valueOf(id));
        DefaultTableModel tbl1 = (DefaultTableModel) ptbl1.getModel(); 
        DefaultTableModel tbl2 = (DefaultTableModel) ptbl2.getModel(); 
         if(id == 0){
            tbl1.setRowCount(0);
            tbl2.setRowCount(0); 
         }
        tc.showprods2d();
        tc.showprods3d();
        tc.showcount2();
        for(int i=0;i<tc.counternew.length;i++){
            count2[i] = tc.counternew[i];
        }
        try{
            for(int i=0;i<tc.prodstbl1new.length;i++){
                for(int j=0;j<tc.prodstbl1new[0].length;j++){
                    if(tc.prodstbl1new[i][j].equals("-")){
                        continue;
                    }else{
                        if(tc.prodstbl1new[i][0] != null){
                            prods[i][j] = tc.prodstbl1new[i][j];
                        }
                    }
                }
            }
        }catch (Exception e){
        }  
        set2D();
        try{
            for(int i=0;i<tc.prodstbl2new.length;i++){
                for(int j=0;j<tc.prodstbl2new[0].length;j++){
                    for(int k=0;k<tc.prodstbl2new[0][0].length;k++){
                        if(tc.prodstbl2new[i][j][0] != null){
                            prods3d[i][j][k] = tc.prodstbl2new[i][j][k];
                        }
                    }
                }
            }
        }catch (Exception e){
        }
        try{
            for(int i=0;i<count2.length;i++){
                count2 [i] = tc.counternew[i];
            }
        }catch (Exception e){
        }
        tc.showcosts();
        lcost.setText(Integer.toString(tc.costsnew[0]));
        ohcost.setText(Integer.toString(tc.costsnew[1]));
        profit.setText(Integer.toString(tc.costsnew[2]));
        labor = tc.costsnew[0];
        overhead = tc.costsnew[1];
        desprof = tc.costsnew[2];
    }//GEN-LAST:event_formWindowOpened

    private void ptbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ptbl1MouseClicked
        //ouput in entry boxes
        DefaultTableModel tbl1 = (DefaultTableModel) ptbl1.getModel(); 
        DefaultTableModel tbl2 = (DefaultTableModel) ptbl2.getModel(); 
        int [] selectRow = ptbl1.getSelectedRows();
        rownum = ptbl1.getSelectedRow();
        pid.setText(tbl1.getValueAt(selectRow[0], 0).toString());
        ptype.setText(tbl1.getValueAt(selectRow[0], 1).toString());
        pdesc.setText("");
        supp.setText("");
        quan1.setText("");
        tcost.setText("");
        dreceived.setText("");
        if(CustomerForm.add == true){
            tbl1.setValueAt(Integer.parseInt(prods[rownum][4]), rownum, 4);
            set2D();
        }
        tbl2.setRowCount(0);
        tc.getprods2d();
        tc.getprods3d();
        tc.prods2dcsv();
        tc.prods3dcsv();
        tc.showprods2d();
        tc.showprods3d();
        set3D();
    }//GEN-LAST:event_ptbl1MouseClicked

    private void stockinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockinActionPerformed
        DefaultTableModel tbl1 = (DefaultTableModel) ptbl1.getModel();
        DefaultTableModel tbl2 = (DefaultTableModel) ptbl2.getModel();
        sum = 0;
        if(ptbl1.getSelectedRowCount() == 1){
            int [] selectRow = ptbl1.getSelectedRows();
            int idcurrent = Integer.parseInt(tbl1.getValueAt(selectRow[0], 0).toString());
            String today = gettoday();
            ordersnum = 0;
            if(ptype.getText().length() != 0 && pdesc.getText().length() != 0 && supp.getText().length() != 0 && quan2.getText().length() != 0 && tcost.getText().length() != 0){
                tc.getcount2();
                tc.count2csv();
                tc.showcount2();
                for(int i=0;i<tc.counternew.length;i++){
                    count2[i] = tc.counternew[i];
                }
                dreceived.setText(today);
                String creds1 [] = {String.valueOf(idcurrent),ptype.getText(),pdesc.getText(),supp.getText(),quan2.getText(),tcost.getText(),today, String.valueOf(ordersnum)};
                String creds2 [] = {String.valueOf(idcurrent),ptype.getText(),pdesc.getText(),supp.getText(),quan2.getText(), String.valueOf(ordersnum)};
                for(int i=0;i<prods3d[0][0].length;i++){
                    prods3d[rownum][count2[rownum]][i] = creds1[i];
                }
                int a;
                for(int i=0;i<prods3d[0].length;i++){
                    if(prods3d[rownum][i][0] != null){
                        sum = sum + Integer.parseInt(prods3d[rownum][i][4]);
                    }
                }
                System.out.println("Sum: " + sum);
                for(int j=0;j<creds2.length;j++){
                    if(j == 4){
                        prods[rownum][j] = Integer.toString(sum);
                    }else{
                        prods[rownum][j] = creds2[j];
                    }
                }
                count2[rownum]++;
            }
            else{
                msgbox("Error", "Incomplete! Please fill in the boxes.");
            }
        }
        else{
            msgbox("Error", "Select a row!");
        }
        tbl1.setRowCount(0);
        tbl2.setRowCount(0);
        set2D();
        tc.getprods3d();
        tc.prods3dcsv();
        tc.showprods3d();
        tc.getcount2();
        tc.count2csv();
        tc.showcount2();
        for(int i=0;i<tc.counternew.length;i++){
            count2[i] = tc.counternew[i];
        }
        tc.getprods2d();
        tc.prods2dcsv();
        tc.showprods2d();
        tc.getprods3d();
        tc.prods3dcsv();
        tc.showprods3d();
        tc.getcount2();
        tc.count2csv();
        tc.showcount2();
        for(int i=0;i<tc.counternew.length;i++){
            count2[i] = tc.counternew[i];
        }
        tbl2.setRowCount(0);
        try{
            for(int i=0;i<tc.prodstbl1new.length;i++){
                for(int j=0;j<tc.prodstbl1new[0].length;j++){
                    if(tc.prodstbl1new[i][0].equals("-")){
                        continue;
                    }else{
                        prods[i][j] = tc.prodstbl1new[i][j];
                    }
                }
            }
        }catch (Exception e){
        }
        try{
            for(int i=0;i<tc.prodstbl2new.length;i++){
                for(int j=0;j<tc.prodstbl2new[0].length;i++){
                    for(int k=0;k<tc.prodstbl2new.length;k++){
                        if(tc.prodstbl2new[i][j][k].equals("|")){
                            continue;
                        }else{
                            prods3d [i][j][k] = tc.prodstbl2new[i][j][k];
                        }
                        if(tc.prodstbl2new[i][j][k].equals("-")){
                            continue;
                        }else{
                            prods3d [i][j][k] = tc.prodstbl2new[i][j][k];
                        }
                    }
                }
            }
        }catch (Exception e){
        }
        set3D();
    }//GEN-LAST:event_stockinActionPerformed

    private void dreceivedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dreceivedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dreceivedActionPerformed

    private void lcostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lcostActionPerformed
     
    }//GEN-LAST:event_lcostActionPerformed

    private void profitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profitActionPerformed
    //select product to order
    private void ptbl2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ptbl2MouseClicked
        DefaultTableModel tbl2 = (DefaultTableModel) ptbl2.getModel(); 
        try{
            labor = Integer.parseInt(lcost.getText().toString());
            overhead = Integer.parseInt(ohcost.getText().toString());
            desprof = Integer.parseInt(profit.getText().toString());
        }catch(Exception e){
        }
            int [] selectRow = ptbl2.getSelectedRows();
            rowProd = ptbl2.getSelectedRow();
            pidorder = (tbl2.getValueAt(selectRow[0], 0).toString());
            ptypeorder = (tbl2.getValueAt(selectRow[0], 1).toString());
            pdescorder = (tbl2.getValueAt(selectRow[0], 2).toString());
            quanorder = (Integer.parseInt(tbl2.getValueAt(selectRow[0], 4).toString()));
            costorder = (Integer.parseInt(tbl2.getValueAt(selectRow[0], 5).toString()));
            ordersnum = (Integer.parseInt(tbl2.getValueAt(selectRow[0], 7).toString()));
            System.out.println("Quan: " + quanorder);
            System.out.println("Cost: " + costorder);
            System.out.println("Orders: " + ordersnum);
    }//GEN-LAST:event_ptbl2MouseClicked
    
    public static void afterAdd(){
        ordersnum++;
        quanorder--;
        sumorder = 0;
        prods3d[rownum][rowProd][4] = Integer.toString(quanorder);
        prods3d[rownum][rowProd][7] = Integer.toString(ordersnum);
        System.out.println("afterAdd");
        System.out.println("Quan: " + quanorder);
        System.out.println("Orders: " + ordersnum);
        prods[rownum][4] = Integer.toString(Integer.parseInt(prods[rownum][4])-1);
        for(int i=0; i<prods3d[0].length;i++){
            if(prods3d[rownum][i][0] != null){
                sumorder = sumorder + Integer.parseInt(prods3d[rownum][i][7].toString());
            }
        }
        prods[rownum][5] = Integer.toString(sumorder);
        System.out.println("p1: " + prods[rownum][4]);
        System.out.println("p1: " + prods[rownum][5]); 
    }
     
    private void quan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quan1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quan1ActionPerformed

    private void savecostsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savecostsActionPerformed
        if(lcost.getText().length() != 0 && ohcost.getText().length() != 0 && profit.getText().length() != 0){
            tc.costs[0] = Integer.parseInt(lcost.getText());
            tc.costs[1] = Integer.parseInt(ohcost.getText());
            tc.costs[2] = Integer.parseInt(profit.getText());
            tc.costscsv();
//            tc.showcosts();
        }else{
            msgbox("Error!", "Invalid labor cost/overhead cost/desired profit.");
        }
    }//GEN-LAST:event_savecostsActionPerformed
    //msgbox
    public static void msgbox(String title, String msg){
        JOptionPane.showMessageDialog(null,msg,title,JOptionPane.INFORMATION_MESSAGE);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductsWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dreceived;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField lcost;
    private javax.swing.JButton newproduct;
    private javax.swing.JTextField ohcost;
    private javax.swing.JTextField pdesc;
    private javax.swing.JTextField pid;
    private javax.swing.JTextField profit;
    public javax.swing.JTable ptbl1;
    public javax.swing.JTable ptbl2;
    private javax.swing.JTextField ptype;
    private javax.swing.JTextField quan1;
    private javax.swing.JTextField quan2;
    private javax.swing.JButton savecosts;
    private javax.swing.JButton stockin;
    private javax.swing.JTextField supp;
    private javax.swing.JTextField tcost;
    // End of variables declaration//GEN-END:variables
}
